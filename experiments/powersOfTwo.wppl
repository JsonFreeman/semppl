// Training setup
var peopleHeights = [2, 4, 6];
var peopleWeights = [2, 4, 6];
var treeHeights = [8, 16, 24];
var treeWeights = [8, 16, 24];
var buildingHeights = [32, 64, 96];
var buildingWeights = [32, 64, 96];
var thetaHeights = [1, 2, 4, 16, 32, 64, 128];
var thetaWeights = [1, 2, 4, 16, 32, 64, 128];

var peopleWorlds = Infer({method: 'enumerate'}, function() {
    return {
        facts: {
            height: { john: uniformDraw(peopleHeights) },
            weight: { john: uniformDraw(peopleWeights) },
            person: { john: true  },
            building: { john: false }
        }
    }
}).support();

var treeWorlds = Infer({method: 'enumerate'}, function() {
    return {
        facts: {
            height: { oak: uniformDraw(treeHeights) },
            weight: { oak: uniformDraw(treeWeights) },
            person: { oak: false  },
            building: { oak: false }
        }
    }
}).support();

// Make buildings worlds
var buildingWorlds = Infer({method: 'enumerate'}, function() {
    return {
        facts: {
            height: { gates: uniformDraw(buildingHeights) },
            weight: { gates: uniformDraw(buildingWeights) },
            person: { gates: false },
            building: { gates: true }
        }
    }
}).support();

var thetas = map2(function(h, w) {
    return {
        tall: h,
        heavy: w
    };
}, thetaHeights, thetaWeights);

var peopleUtterances = ["John is tall", "John is heavy", "John is light", "John is short", "null"];
var buildingUtterances = ["Gates is tall", "Gates is heavy", "Gates is light", "Gates is short", "null"];

var peopleContext = {
    worlds: peopleWorlds,
    utterances: peopleUtterances,
    thetaCandidates: thetas
}

var buildingContext = {
    worlds: buildingWorlds,
    utterances: buildingUtterances,
    thetaCandidates: thetas
};

var peopleData = sampleGroundDistributions(peopleUtterances, [peopleContext], 500);
var buildingData = sampleGroundDistributions(buildingUtterances, [buildingContext], 500);
var results = train(peopleData.concat(buildingData), 3000, null);

test("John is tall", peopleContext, results);
test("John is heavy", peopleContext, results);

var treeUtterances = ["Oak is tall", "Oak is heavy", "Oak is light", "Oak is short", "null"];
var treeContext = {
    worlds: treeWorlds,
    utterances: treeUtterances,
    thetaCandidates: thetas
}

test("Oak is tall", treeContext, results);
test("Oak is heavy", treeContext, results);